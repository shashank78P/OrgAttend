# Generated by Django 4.2.5 on 2023-11-30 14:07

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Users', '0010_alter_users_password'),
    ]

    operations = [
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('_id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, error_messages={'invalid': 'Please enter a valid organization name.', 'unique': 'Organization name is already exist'}, max_length=100, unique=True)),
                ('webSiteLink', models.CharField(max_length=2000)),
                ('socialMediaLink', models.CharField(max_length=2000)),
                ('contactEmail', models.EmailField(db_index=True, error_messages={'invalid': 'Please enter a valid email address.', 'unique': 'This email is already exist'}, max_length=254, unique=True, validators=[django.core.validators.EmailValidator()])),
                ('logo', models.FileField(default='organization.png', error_messages={'invalid': 'Invalid file (file is not acceptable).'}, max_length=20000, upload_to='uploads')),
                ('description', models.CharField(max_length=2000)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Users.address')),
            ],
        ),
        migrations.CreateModel(
            name='OwnerDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('OrganizationId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Organization.organization')),
                ('userId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Users.users')),
            ],
        ),
    ]
